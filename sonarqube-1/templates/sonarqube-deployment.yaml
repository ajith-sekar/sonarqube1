apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  namespace: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      automountServiceAccountToken: false
      securityContext:
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        - name: fix-permissions
          image: busybox:1.35
          command:
            - sh
            - -c
            - |
              mkdir -p /opt/sonarqube/data/es7 /opt/sonarqube/extensions /opt/sonarqube/logs /opt/sonarqube/temp && \
              chown -R 1000:1000 /opt/sonarqube/data /opt/sonarqube/extensions /opt/sonarqube/logs /opt/sonarqube/temp
          volumeMounts:
            - name: sonarqube-data
              mountPath: /opt/sonarqube/data
            - name: sonarqube-extensions
              mountPath: /opt/sonarqube/extensions
            - name: sonarqube-logs
              mountPath: /opt/sonarqube/logs
            - name: sonarqube-temp
              mountPath: /opt/sonarqube/temp
      containers:
        - name: sonarqube
          image: "{{ .Values.sonarqube.image.repository }}:{{ .Values.sonarqube.image.tag }}"
          imagePullPolicy: {{ .Values.sonarqube.image.pullPolicy }}
          ports:
            - containerPort: 9000
          env:
            - name: SONAR_JDBC_URL
              value: {{ .Values.sonarqube.env.SONAR_JDBC_URL | quote }}
            - name: SONAR_JDBC_USERNAME
              value: {{ .Values.sonarqube.env.SONAR_JDBC_USERNAME | quote }}
            - name: SONAR_JDBC_PASSWORD
              value: {{ .Values.sonarqube.env.SONAR_JDBC_PASSWORD | quote }}
            - name: SONAR_JVM_OPTS
              value: "-Xmx512m -Xms256m -XX:+ExitOnOutOfMemoryError"
          resources:
            requests:
              cpu: {{ .Values.sonarqube.resources.requests.cpu | quote }}
              memory: {{ .Values.sonarqube.resources.requests.memory | quote }}
            limits:
              cpu: {{ .Values.sonarqube.resources.limits.cpu | quote }}
              memory: {{ .Values.sonarqube.resources.limits.memory | quote }}
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - ALL
          livenessProbe:
            httpGet:
              path: /api/system/health
              port: 9000
            initialDelaySeconds: 90
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /api/system/health
              port: 9000
            initialDelaySeconds: 90
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 6
          volumeMounts:
            - name: sonarqube-data
              mountPath: /opt/sonarqube/data
            - name: sonarqube-extensions
              mountPath: /opt/sonarqube/extensions
            - name: sonarqube-logs
              mountPath: /opt/sonarqube/logs
            - name: sonarqube-temp
              mountPath: /opt/sonarqube/temp
      volumes:
        - name: sonarqube-data
          persistentVolumeClaim:
            claimName: {{ .Values.sonarqube.persistence.data.existingClaim }}
        - name: sonarqube-extensions
          persistentVolumeClaim:
            claimName: {{ .Values.sonarqube.persistence.extensions.existingClaim }}
        - name: sonarqube-logs
          persistentVolumeClaim:
            claimName: {{ .Values.sonarqube.persistence.logs.existingClaim }}
        - name: sonarqube-temp
          emptyDir: {}
