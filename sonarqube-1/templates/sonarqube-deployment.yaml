apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  namespace: {{ .Release.Namespace }}
  labels:
    app: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      automountServiceAccountToken: false
      securityContext:
        fsGroup: {{ .Values.sonarqube.securityContext.fsGroup }}
        runAsUser: {{ .Values.sonarqube.securityContext.runAsUser }}
      containers:
        - name: sonarqube
          image: "{{ .Values.sonarqube.image.repository }}:{{ .Values.sonarqube.image.tag }}"
          imagePullPolicy: {{ .Values.sonarqube.image.pullPolicy }}
          ports:
            - containerPort: 9000
          env:
            - name: SONAR_JDBC_URL
              value: {{ .Values.sonarqube.env.SONAR_JDBC_URL | quote }}
            - name: SONAR_JDBC_USERNAME
              value: {{ .Values.sonarqube.env.SONAR_JDBC_USERNAME | quote }}
            - name: SONAR_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
            - name: SONAR_JVM_OPTS
              value: {{ .Values.sonarqube.env.SONAR_JVM_OPTS | quote }}
            - name: SONAR_AUTHENTICATION_ANONYMOUS
              value: {{ .Values.sonarqube.env.SONAR_AUTHENTICATION_ANONYMOUS | quote }}
            - name: SONAR_WEB_CONTEXT_PATH
              value: {{ .Values.sonarqube.env.SONAR_WEB_CONTEXT_PATH | quote }}
          securityContext:
            runAsUser: {{ .Values.sonarqube.securityContext.runAsUser }}
            runAsGroup: {{ .Values.sonarqube.securityContext.fsGroup }}
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              cpu: {{ .Values.sonarqube.resources.requests.cpu | quote }}
              memory: {{ .Values.sonarqube.resources.requests.memory | quote }}
            limits:
              cpu: {{ .Values.sonarqube.resources.limits.cpu | quote }}
              memory: {{ .Values.sonarqube.resources.limits.memory | quote }}
          livenessProbe:
            httpGet:
              path: /
              port: 9000
            initialDelaySeconds: {{ .Values.sonarqube.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.sonarqube.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.sonarqube.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.sonarqube.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /
              port: 9000
            initialDelaySeconds: {{ .Values.sonarqube.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.sonarqube.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.sonarqube.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.sonarqube.readinessProbe.failureThreshold }}
          volumeMounts:
            - name: sonarqube-data
              mountPath: /opt/sonarqube/data
            - name: sonarqube-extensions
              mountPath: /opt/sonarqube/extensions
            - name: sonarqube-logs
              mountPath: /opt/sonarqube/logs
      volumes:
        - name: sonarqube-data
          persistentVolumeClaim:
            claimName: {{ .Values.sonarqube.persistence.data.existingClaim }}
        - name: sonarqube-extensions
          persistentVolumeClaim:
            claimName: {{ .Values.sonarqube.persistence.extensions.existingClaim }}
        - name: sonarqube-logs
          persistentVolumeClaim:
            claimName: {{ .Values.sonarqube.persistence.logs.existingClaim }}
