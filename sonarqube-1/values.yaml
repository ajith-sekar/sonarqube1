postgres:
  image:
    repository: postgres
    tag: "15.2"
    pullPolicy: Always
  resources:
    requests:
      cpu: "100m"
      memory: "512Mi"
    limits:
      cpu: "500m"
      memory: "1Gi"
  persistence:
    size: 8Gi
    storageClass: manual
  auth:
    database: sonarqube
    username: sonar
    password: sonarpass
  securityContext:
    runAsNonRoot: true
    runAsUser: 999
    fsGroup: 999

sonarqube:
  image:
    repository: sonarqube
    tag: "9.9.4-community"
    pullPolicy: Always
  env:
    SONAR_JDBC_URL: jdbc:postgresql://postgres.sonarqube.svc.cluster.local:5432/sonarqube
    SONAR_JDBC_USERNAME: sonar
    SONAR_JDBC_PASSWORD: sonarpass
    SONAR_JVM_OPTS: "-Xmx512m -Xms256m -XX:+ExitOnOutOfMemoryError"
  resources:
    requests:
      cpu: "200m"
      memory: "1Gi"
    limits:
      cpu: "1000m"
      memory: "2Gi"
  persistence:
    data:
      size: 5Gi
      existingClaim: sonarqube-data-pvc
    extensions:
      size: 2Gi
      existingClaim: sonarqube-extensions-pvc
    logs:
      size: 1Gi
      existingClaim: sonarqube-logs-pvc
    temp:
      emptyDir: true
  livenessProbe:
    httpGet:
      path: /health
      port: 9000
    initialDelaySeconds: 90
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 6
  readinessProbe:
    httpGet:
      path: /health
      port: 9000
    initialDelaySeconds: 90
    periodSeconds: 20
    timeoutSeconds: 10
    failureThreshold: 6
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
  containerSecurityContext:
    allowPrivilegeEscalation: false
  networkPolicy:
    enabled: true
    ingress:
      - from:
          - namespaceSelector: {}
